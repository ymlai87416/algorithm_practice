//use fenwick for frequent point update.
class FenwickTree {
    private int[] ft; // recall that vi is: typedef vector<int> vi;
    public FenwickTree(int n) { ft = new int[n+1]; } // init n + 1 zeroes
    private int LSOne(int S){ return S & -S;}
    int rsq(int b) { // returns RSQ(1, b)
        int sum = 0; for (; b != 0; b -= LSOne(b)) sum += ft[b];
        return sum; } // note: LSOne(S) (S & (-S))
    int rsq(int a, int b) { // returns RSQ(a, b)
        return rsq(b) - (a == 1 ? 0 : rsq(a - 1)); }
    // adjusts value of the k-th element by v (v can be +ve/inc or -ve/dec)
    void adjust(int k, int v) { // note: n = ft.size() - 1
        for (; k < ft.length; k += LSOne(k)) ft[k] += v; }
};